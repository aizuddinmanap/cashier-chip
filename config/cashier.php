<?php

return [

    /*
    |--------------------------------------------------------------------------
    | Chip API Configuration
    |--------------------------------------------------------------------------
    |
    | Here you may configure your Chip API settings. You should set your
    | Chip API key, brand ID, and API endpoint URL. You can find these
    | credentials in your Chip merchant dashboard.
    |
    */

    'chip_api_key' => env('CHIP_API_KEY'),

    'chip_brand_id' => env('CHIP_BRAND_ID'),

    'chip_api_url' => env('CHIP_API_URL', 'https://gate.chip-in.asia/api/v1'),

    /*
    |--------------------------------------------------------------------------
    | Chip Webhook Configuration
    |--------------------------------------------------------------------------
    |
    | Chip can notify your application of various billing events via webhook
    | endpoints. You should set the webhook secret key that Chip provides
    | to verify the authenticity of incoming webhook requests.
    |
    */

    'chip_webhook_secret' => env('CHIP_WEBHOOK_SECRET'),

    'webhook_tolerance' => env('CHIP_WEBHOOK_TOLERANCE', 300),

    /*
    |--------------------------------------------------------------------------
    | Currency
    |--------------------------------------------------------------------------
    |
    | This is the default currency that will be used when generating charges
    | from your application. Chip supports MYR for Malaysian market including
    | FPX online banking, credit cards, e-wallets, and DuitNow QR payments.
    |
    */

    'currency' => env('CASHIER_CURRENCY', 'myr'),

    'currency_locale' => env('CASHIER_CURRENCY_LOCALE', 'en'),

    /*
    |--------------------------------------------------------------------------
    | Billable Model
    |--------------------------------------------------------------------------
    |
    | This is the model in your application that implements the Billable trait
    | provided by Cashier. It will serve as the primary model you use while
    | interacting with Cashier related methods, subscriptions, and so on.
    |
    */

    'model' => env('CASHIER_MODEL', App\Models\User::class),

    /*
    |--------------------------------------------------------------------------
    | Cashier Path
    |--------------------------------------------------------------------------
    |
    | This is the base URI path where Cashier's webhook endpoints will be
    | available from. You are free to change this path to anything you like
    | to your preferences and application design.
    |
    */

    'path' => env('CASHIER_PATH', 'chip'),

    /*
    |--------------------------------------------------------------------------
    | Payment Methods
    |--------------------------------------------------------------------------
    |
    | This configuration option allows you to specify the default payment
    | methods that will be available to your customers. Chip supports
    | various payment methods including FPX, cards, and e-wallets.
    |
    */

    'payment_methods' => [
        'fpx',
        'card',
        'ewallet',
        'duitnow_qr',
    ],

    /*
    |--------------------------------------------------------------------------
    | Test Mode
    |--------------------------------------------------------------------------
    |
    | When this option is enabled, Cashier will operate in test mode and
    | use test API endpoints. This is useful during development and testing
    | to avoid processing real payments.
    |
    */

    'test_mode' => env('CHIP_TEST_MODE', false),

    /*
    |--------------------------------------------------------------------------
    | Logger
    |--------------------------------------------------------------------------
    |
    | This configuration option allows you to specify a PSR-3 logger instance
    | that will be used to log debug information generated by Cashier.
    |
    */

    'logger' => env('CASHIER_LOGGER'),

    /*
    |--------------------------------------------------------------------------
    | FPX Configuration
    |--------------------------------------------------------------------------
    |
    | Configuration specific to FPX (Financial Process Exchange) payments
    | which is Malaysia's national payment network.
    |
    */

    'fpx' => [
        'banks_refresh_interval' => env('FPX_BANKS_REFRESH_INTERVAL', 3600), // 1 hour in seconds
        'default_banks' => [
            'affin', 'alliance', 'ambank', 'cimb', 'hongleong', 'hsbc',
            'kfh', 'maybank', 'ocbc', 'public', 'rhb', 'sc', 'uob'
        ],
    ],

    /*
    |--------------------------------------------------------------------------
    | Subscription Configuration
    |--------------------------------------------------------------------------
    |
    | Configuration for subscription behavior and defaults.
    |
    */

    'subscription' => [
        'default_grace_period' => env('CASHIER_GRACE_PERIOD', 7), // days
        'trial_period' => env('CASHIER_TRIAL_PERIOD', 14), // days
    ],

    /*
    |--------------------------------------------------------------------------
    | Invoice Configuration
    |--------------------------------------------------------------------------
    |
    | Configuration for invoice generation and management.
    |
    */

    'invoice' => [
        'paper' => env('CASHIER_PAPER', 'letter'),
        'vendor' => env('CASHIER_VENDOR', 'Your Company'),
        'product' => env('CASHIER_PRODUCT', 'Your Product'),
        'street' => env('CASHIER_STREET'),
        'location' => env('CASHIER_LOCATION'),
        'phone' => env('CASHIER_PHONE'),
        'email' => env('CASHIER_EMAIL'),
        'url' => env('CASHIER_URL'),
        'vendor_id' => env('CASHIER_VENDOR_ID'),
    ],

]; 